{
  "reference": {
    "path": "kotlindoc",
    "baseUrl": "https://jasonwyatt.github.io/KWasm",
    "fileName": "kwasm/validation/instruction/control/plainvalidator",
    "extension": "html",
    "usePrettyUrl": true,
    "link": "https://jasonwyatt.github.io/KWasm/kotlindoc/kwasm/validation/instruction/control/plainvalidator"
  },
  "data": {},
  "description": "",
  "title": "PlainValidator",
  "content": "<p>CommentComponent(kind=text, text=Validator of &quot;plain&quot; (non-, value=) CommentComponent(kind=typeName, text=kwasm.ast.instruction.BlockInstruction, value=kwasm.ast.instruction.BlockInstruction) CommentComponent(kind=text, text=) , value=) CommentComponent(kind=typeName, text=ControlInstruction, value=kwasm.ast.instruction.ControlInstruction) CommentComponent(kind=text, text= nodes.<p>From\n<a href=\"https://webassembly.github.io/spec/core/valid/instructions.html#control-instructions\">the docs<\/a>:<\/p><pre><code class=\"language-\">\nnop\n<\/code><\/pre><ul><li>The instruction is valid with type <code>[] =&gt; []<\/code>.<\/li><\/ul><pre><code class=\"language-\">\nunreachable<\/p>\n<\/code><\/pre><ul><li>The instruction is valid with type <code>[t*1] => [t*2]<\/code>, for any sequences of value types <code>t*1<\/code>\nand <code>t*2<\/code>.<\/li><\/ul><p>For the other types, see the <code>validate<\/code> extension functions on , value=) CommentComponent(kind=typeName, text=ControlInstruction.Break, value=kwasm.ast.instruction.ControlInstruction.Break) CommentComponent(kind=text, text=,\n, value=) CommentComponent(kind=typeName, text=ControlInstruction.BreakIf, value=kwasm.ast.instruction.ControlInstruction.BreakIf) CommentComponent(kind=text, text=, , value=) CommentComponent(kind=typeName, text=ControlInstruction.BreakTable, value=kwasm.ast.instruction.ControlInstruction.BreakTable) CommentComponent(kind=text, text=, , value=) CommentComponent(kind=typeName, text=ControlInstruction.Return, value=kwasm.ast.instruction.ControlInstruction.Return) CommentComponent(kind=text, text=,\n, value=) CommentComponent(kind=typeName, text=ControlInstruction.Call, value=kwasm.ast.instruction.ControlInstruction.Call) CommentComponent(kind=text, text=, and , value=) CommentComponent(kind=typeName, text=ControlInstruction.CallIndirect, value=kwasm.ast.instruction.ControlInstruction.CallIndirect) CommentComponent(kind=text, text=.<\/p>, value=null)\n"
}